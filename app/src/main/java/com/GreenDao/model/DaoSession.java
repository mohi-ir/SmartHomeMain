package com.GreenDao.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.GreenDao.model.Function;
import com.GreenDao.model.WuType;
import com.GreenDao.model.Channel;
import com.GreenDao.model.Room;
import com.GreenDao.model.WallUnit;
import com.GreenDao.model.Memory;
import com.GreenDao.model.MemoryType;
import com.GreenDao.model.MemoryValue;

import com.GreenDao.model.FunctionDao;
import com.GreenDao.model.WuTypeDao;
import com.GreenDao.model.ChannelDao;
import com.GreenDao.model.RoomDao;
import com.GreenDao.model.WallUnitDao;
import com.GreenDao.model.MemoryDao;
import com.GreenDao.model.MemoryTypeDao;
import com.GreenDao.model.MemoryValueDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig functionDaoConfig;
    private final DaoConfig wuTypeDaoConfig;
    private final DaoConfig channelDaoConfig;
    private final DaoConfig roomDaoConfig;
    private final DaoConfig wallUnitDaoConfig;
    private final DaoConfig memoryDaoConfig;
    private final DaoConfig memoryTypeDaoConfig;
    private final DaoConfig memoryValueDaoConfig;

    private final FunctionDao functionDao;
    private final WuTypeDao wuTypeDao;
    private final ChannelDao channelDao;
    private final RoomDao roomDao;
    private final WallUnitDao wallUnitDao;
    private final MemoryDao memoryDao;
    private final MemoryTypeDao memoryTypeDao;
    private final MemoryValueDao memoryValueDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        functionDaoConfig = daoConfigMap.get(FunctionDao.class).clone();
        functionDaoConfig.initIdentityScope(type);

        wuTypeDaoConfig = daoConfigMap.get(WuTypeDao.class).clone();
        wuTypeDaoConfig.initIdentityScope(type);

        channelDaoConfig = daoConfigMap.get(ChannelDao.class).clone();
        channelDaoConfig.initIdentityScope(type);

        roomDaoConfig = daoConfigMap.get(RoomDao.class).clone();
        roomDaoConfig.initIdentityScope(type);

        wallUnitDaoConfig = daoConfigMap.get(WallUnitDao.class).clone();
        wallUnitDaoConfig.initIdentityScope(type);

        memoryDaoConfig = daoConfigMap.get(MemoryDao.class).clone();
        memoryDaoConfig.initIdentityScope(type);

        memoryTypeDaoConfig = daoConfigMap.get(MemoryTypeDao.class).clone();
        memoryTypeDaoConfig.initIdentityScope(type);

        memoryValueDaoConfig = daoConfigMap.get(MemoryValueDao.class).clone();
        memoryValueDaoConfig.initIdentityScope(type);

        functionDao = new FunctionDao(functionDaoConfig, this);
        wuTypeDao = new WuTypeDao(wuTypeDaoConfig, this);
        channelDao = new ChannelDao(channelDaoConfig, this);
        roomDao = new RoomDao(roomDaoConfig, this);
        wallUnitDao = new WallUnitDao(wallUnitDaoConfig, this);
        memoryDao = new MemoryDao(memoryDaoConfig, this);
        memoryTypeDao = new MemoryTypeDao(memoryTypeDaoConfig, this);
        memoryValueDao = new MemoryValueDao(memoryValueDaoConfig, this);

        registerDao(Function.class, functionDao);
        registerDao(WuType.class, wuTypeDao);
        registerDao(Channel.class, channelDao);
        registerDao(Room.class, roomDao);
        registerDao(WallUnit.class, wallUnitDao);
        registerDao(Memory.class, memoryDao);
        registerDao(MemoryType.class, memoryTypeDao);
        registerDao(MemoryValue.class, memoryValueDao);
    }
    
    public void clear() {
        functionDaoConfig.getIdentityScope().clear();
        wuTypeDaoConfig.getIdentityScope().clear();
        channelDaoConfig.getIdentityScope().clear();
        roomDaoConfig.getIdentityScope().clear();
        wallUnitDaoConfig.getIdentityScope().clear();
        memoryDaoConfig.getIdentityScope().clear();
        memoryTypeDaoConfig.getIdentityScope().clear();
        memoryValueDaoConfig.getIdentityScope().clear();
    }

    public FunctionDao getFunctionDao() {
        return functionDao;
    }

    public WuTypeDao getWuTypeDao() {
        return wuTypeDao;
    }

    public ChannelDao getChannelDao() {
        return channelDao;
    }

    public RoomDao getRoomDao() {
        return roomDao;
    }

    public WallUnitDao getWallUnitDao() {
        return wallUnitDao;
    }

    public MemoryDao getMemoryDao() {
        return memoryDao;
    }

    public MemoryTypeDao getMemoryTypeDao() {
        return memoryTypeDao;
    }

    public MemoryValueDao getMemoryValueDao() {
        return memoryValueDao;
    }

}
